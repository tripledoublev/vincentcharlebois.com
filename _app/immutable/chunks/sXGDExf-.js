function k(){}const D=t=>t;function x(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function M(){return Object.create(null)}function j(t){t.forEach(w)}function A(t){return typeof t=="function"}function B(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function C(t){return Object.keys(t).length===0}function E(t,...n){if(t==null){for(const o of n)o(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function F(t,n,e){t.$$.on_destroy.push(E(n,e))}function P(t,n,e,o){if(t){const c=y(t,n,e,o);return t[0](c)}}function y(t,n,e,o){return t[1]&&o?x(e.ctx.slice(),t[1](o(n))):e.ctx}function S(t,n,e,o){if(t[2]&&o){const c=t[2](o(e));if(n.dirty===void 0)return c;if(typeof c=="object"){const l=[],f=Math.max(n.dirty.length,c.length);for(let u=0;u<f;u+=1)l[u]=n.dirty[u]|c[u];return l}return n.dirty|c}return n.dirty}function U(t,n,e,o,c,l){if(c){const f=y(n,e,o,l);t.p(f,c)}}function G(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}function H(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}let i;function d(t){i=t}function b(){if(!i)throw new Error("Function called outside component initialization");return i}function I(t){b().$$.on_mount.push(t)}function J(t){b().$$.after_update.push(t)}function K(t){b().$$.on_destroy.push(t)}function L(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(o=>o.call(this,n))}const a=[],g=[];let r=[];const h=[],m=Promise.resolve();let p=!1;function v(){p||(p=!0,m.then(q))}function N(){return v(),m}function O(t){r.push(t)}function Q(t){h.push(t)}const _=new Set;let s=0;function q(){if(s!==0)return;const t=i;do{try{for(;s<a.length;){const n=a[s];s++,d(n),z(n.$$)}}catch(n){throw a.length=0,s=0,n}for(d(null),a.length=0,s=0;g.length;)g.pop()();for(let n=0;n<r.length;n+=1){const e=r[n];_.has(e)||(_.add(e),e())}r.length=0}while(a.length);for(;h.length;)h.pop()();p=!1,_.clear(),d(t)}function z(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function R(t){const n=[],e=[];r.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),r=n}export{U as A,G as B,S as C,E as D,x as a,K as b,F as c,J as d,g as e,O as f,D as g,d as h,A as i,M as j,q as k,C as l,R as m,k as n,I as o,i as p,w as q,j as r,B as s,N as t,a as u,v,H as w,L as x,Q as y,P as z};
